# Generated by Django 2.1.4 on 2018-12-21 21:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlternativeMedium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium', models.IntegerField()),
                ('alternative_release', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'alternative_medium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlternativeMediumTrack',
            fields=[
                ('alternative_medium', models.IntegerField(primary_key=True, serialize=False)),
                ('track', models.IntegerField()),
                ('alternative_track', models.IntegerField()),
            ],
            options={
                'db_table': 'alternative_medium_track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlternativeRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('release', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('artist_credit', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField()),
                ('language', models.IntegerField()),
                ('script', models.IntegerField()),
                ('comment', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'alternative_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlternativeReleaseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'alternative_release_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlternativeTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('artist_credit', models.IntegerField(blank=True, null=True)),
                ('ref_count', models.IntegerField()),
            ],
            options={
                'db_table': 'alternative_track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('changelog', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.IntegerField()),
                ('name', models.TextField()),
                ('oauth_id', models.TextField()),
                ('oauth_secret', models.TextField()),
                ('oauth_redirect_uri', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'application',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('ended', models.BooleanField()),
                ('comment', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'area_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'area_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaAnnotation',
            fields=[
                ('area', models.IntegerField(primary_key=True, serialize=False)),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'area_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.IntegerField()),
                ('area_attribute_type', models.IntegerField()),
                ('area_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('area_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'area_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'area_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'area_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaGidRedirect',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'area_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaTag',
            fields=[
                ('area', models.IntegerField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'area_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaTagRaw',
            fields=[
                ('area', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'area_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'area_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('area', models.IntegerField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('ended', models.BooleanField()),
                ('begin_area', models.IntegerField(blank=True, null=True)),
                ('end_area', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'artist_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'artist_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAnnotation',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'artist_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.IntegerField()),
                ('artist_attribute_type', models.IntegerField()),
                ('artist_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('artist_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'artist_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'artist_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('artist_count', models.SmallIntegerField()),
                ('ref_count', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_credit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistCreditName',
            fields=[
                ('artist_credit', models.IntegerField(primary_key=True, serialize=False)),
                ('position', models.SmallIntegerField()),
                ('artist', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('join_phrase', models.TextField()),
            ],
            options={
                'db_table': 'artist_credit_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistGidRedirect',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistIpi',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('ipi', models.CharField(max_length=11)),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_ipi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistIsni',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('isni', models.CharField(max_length=16)),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_isni',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistMeta',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistRatingRaw',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('rating', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'artist_rating_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistTag',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistTagRaw',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'artist_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'artist_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoeditorElection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate', models.IntegerField()),
                ('proposer', models.IntegerField()),
                ('seconder_1', models.IntegerField(blank=True, null=True)),
                ('seconder_2', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('yes_votes', models.IntegerField()),
                ('no_votes', models.IntegerField()),
                ('propose_time', models.DateTimeField()),
                ('open_time', models.DateTimeField(blank=True, null=True)),
                ('close_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'autoeditor_election',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoeditorElectionVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autoeditor_election', models.IntegerField()),
                ('voter', models.IntegerField()),
                ('vote', models.IntegerField()),
                ('vote_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'autoeditor_election_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cdtoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discid', models.CharField(max_length=28)),
                ('freedb_id', models.CharField(max_length=8)),
                ('track_count', models.IntegerField()),
                ('leadout_offset', models.IntegerField()),
                ('track_offset', models.TextField()),
                ('degraded', models.BooleanField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cdtoc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CdtocRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('discid', models.CharField(max_length=28)),
                ('track_count', models.IntegerField()),
                ('leadout_offset', models.IntegerField()),
                ('track_offset', models.TextField()),
            ],
            options={
                'db_table': 'cdtoc_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountryArea',
            fields=[
                ('area', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'country_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeletedEntity',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('data', models.TextField()),
                ('deleted_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'deleted_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('type', models.SmallIntegerField()),
                ('status', models.SmallIntegerField()),
                ('autoedit', models.SmallIntegerField()),
                ('open_time', models.DateTimeField(blank=True, null=True)),
                ('close_time', models.DateTimeField(blank=True, null=True)),
                ('expire_time', models.DateTimeField()),
                ('language', models.IntegerField(blank=True, null=True)),
                ('quality', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'edit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditArea',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('area', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditArtist',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('artist', models.IntegerField()),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'edit_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditData',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'edit_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditEvent',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('event', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditInstrument',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('instrument', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditLabel',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('label', models.IntegerField()),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'edit_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('edit', models.IntegerField()),
                ('text', models.TextField()),
                ('post_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'edit_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditNoteRecipient',
            fields=[
                ('recipient', models.IntegerField(primary_key=True, serialize=False)),
                ('edit_note', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_note_recipient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('privs', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('member_since', models.DateTimeField(blank=True, null=True)),
                ('email_confirm_date', models.DateTimeField(blank=True, null=True)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('area', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(max_length=128)),
                ('ha1', models.CharField(max_length=32)),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('editor', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('public', models.BooleanField()),
                ('description', models.TextField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionArea',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('area', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionArtist',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('artist', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionDeletedEntity',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'editor_collection_deleted_entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionEvent',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('event', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionInstrument',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('instrument', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionLabel',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('label', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionPlace',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('place', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionRecording',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('recording', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionRelease',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('release', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionReleaseGroup',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('release_group', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionSeries',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('series', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(max_length=50)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'editor_collection_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorCollectionWork',
            fields=[
                ('collection', models.IntegerField(primary_key=True, serialize=False)),
                ('work', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_collection_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorLanguage',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('language', models.IntegerField()),
                ('fluency', models.TextField()),
            ],
            options={
                'db_table': 'editor_language',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorOauthToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('application', models.IntegerField()),
                ('authorization_code', models.TextField(blank=True, null=True)),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('expire_time', models.DateTimeField()),
                ('scope', models.IntegerField()),
                ('granted', models.DateTimeField()),
            ],
            options={
                'db_table': 'editor_oauth_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'editor_preference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('artist', models.IntegerField()),
                ('last_edit_sent', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeArtistDeleted',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('deleted_by', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_artist_deleted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('collection', models.IntegerField()),
                ('last_edit_sent', models.IntegerField()),
                ('available', models.BooleanField()),
                ('last_seen_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'editor_subscribe_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeEditor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('subscribed_editor', models.IntegerField()),
                ('last_edit_sent', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('label', models.IntegerField()),
                ('last_edit_sent', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeLabelDeleted',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('deleted_by', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_label_deleted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.IntegerField()),
                ('series', models.IntegerField()),
                ('last_edit_sent', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorSubscribeSeriesDeleted',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('deleted_by', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_subscribe_series_deleted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorWatchArtist',
            fields=[
                ('artist', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_watch_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorWatchPreferences',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('notify_via_email', models.BooleanField()),
                ('notification_timeframe', models.TextField()),
                ('last_checked', models.DateTimeField()),
            ],
            options={
                'db_table': 'editor_watch_preferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorWatchReleaseGroupType',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('release_group_type', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_watch_release_group_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditorWatchReleaseStatus',
            fields=[
                ('editor', models.IntegerField(primary_key=True, serialize=False)),
                ('release_status', models.IntegerField()),
            ],
            options={
                'db_table': 'editor_watch_release_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditPlace',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('place', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditRecording',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('recording', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditRelease',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('release', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditReleaseGroup',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('release_group', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditSeries',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('series', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditUrl',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('url', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditWork',
            fields=[
                ('edit', models.IntegerField(primary_key=True, serialize=False)),
                ('work', models.IntegerField()),
            ],
            options={
                'db_table': 'edit_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('cancelled', models.BooleanField()),
                ('setlist', models.TextField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'event_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'event_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventAnnotation',
            fields=[
                ('event', models.IntegerField(primary_key=True, serialize=False)),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'event_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.IntegerField()),
                ('event_attribute_type', models.IntegerField()),
                ('event_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('event_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'event_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'event_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventGidRedirect',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventMeta',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventRatingRaw',
            fields=[
                ('event', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('rating', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'event_rating_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventTag',
            fields=[
                ('event', models.IntegerField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventTagRaw',
            fields=[
                ('event', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'event_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'event_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'gender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'instrument_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'instrument_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentAnnotation',
            fields=[
                ('instrument', models.IntegerField(primary_key=True, serialize=False)),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'instrument_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.IntegerField()),
                ('instrument_attribute_type', models.IntegerField()),
                ('instrument_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('instrument_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instrument_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'instrument_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'instrument_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentGidRedirect',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instrument_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentTag',
            fields=[
                ('instrument', models.IntegerField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instrument_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentTagRaw',
            fields=[
                ('instrument', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'instrument_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'instrument_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iso31661',
            fields=[
                ('area', models.IntegerField()),
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'iso_3166_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iso31662',
            fields=[
                ('area', models.IntegerField()),
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'iso_3166_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iso31663',
            fields=[
                ('area', models.IntegerField()),
                ('code', models.CharField(max_length=4, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'iso_3166_3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Isrc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording', models.IntegerField()),
                ('isrc', models.CharField(max_length=12)),
                ('source', models.SmallIntegerField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'isrc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iswc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.IntegerField()),
                ('iswc', models.CharField(blank=True, max_length=15, null=True)),
                ('source', models.SmallIntegerField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'iswc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('label_code', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('area', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'label_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'label_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelAnnotation',
            fields=[
                ('label', models.IntegerField(primary_key=True, serialize=False)),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'label_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.IntegerField()),
                ('label_attribute_type', models.IntegerField()),
                ('label_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('label_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'label_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'label_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelGidRedirect',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelIpi',
            fields=[
                ('label', models.IntegerField(primary_key=True, serialize=False)),
                ('ipi', models.CharField(max_length=11)),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label_ipi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelIsni',
            fields=[
                ('label', models.IntegerField(primary_key=True, serialize=False)),
                ('isni', models.CharField(max_length=16)),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label_isni',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelMeta',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelRatingRaw',
            fields=[
                ('label', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('rating', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'label_rating_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelTag',
            fields=[
                ('label', models.IntegerField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'label_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelTagRaw',
            fields=[
                ('label', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'label_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'label_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code_2t', models.CharField(blank=True, max_length=3, null=True)),
                ('iso_code_2b', models.CharField(blank=True, max_length=3, null=True)),
                ('iso_code_1', models.CharField(blank=True, max_length=2, null=True)),
                ('name', models.CharField(max_length=100)),
                ('frequency', models.IntegerField()),
                ('iso_code_3', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'language',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LAreaWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_area_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LArtistWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_artist_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LEventWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_event_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', models.IntegerField()),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('attribute_count', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkAttribute',
            fields=[
                ('link', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_type', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'link_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkAttributeCredit',
            fields=[
                ('link', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_type', models.IntegerField()),
                ('credited_as', models.TextField()),
            ],
            options={
                'db_table': 'link_attribute_credit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkAttributeTextValue',
            fields=[
                ('link', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_type', models.IntegerField()),
                ('text_value', models.TextField()),
            ],
            options={
                'db_table': 'link_attribute_text_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('root', models.IntegerField()),
                ('child_order', models.IntegerField()),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'link_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkCreditableAttributeType',
            fields=[
                ('attribute_type', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'link_creditable_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkTextAttributeType',
            fields=[
                ('attribute_type', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'link_text_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('gid', models.UUIDField()),
                ('entity_type0', models.CharField(max_length=50)),
                ('entity_type1', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('link_phrase', models.CharField(max_length=255)),
                ('reverse_link_phrase', models.CharField(max_length=255)),
                ('long_link_phrase', models.CharField(max_length=255)),
                ('priority', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('is_deprecated', models.BooleanField()),
                ('has_dates', models.BooleanField()),
                ('entity0_cardinality', models.IntegerField()),
                ('entity1_cardinality', models.IntegerField()),
            ],
            options={
                'db_table': 'link_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkTypeAttributeType',
            fields=[
                ('link_type', models.IntegerField(primary_key=True, serialize=False)),
                ('attribute_type', models.IntegerField()),
                ('min', models.SmallIntegerField(blank=True, null=True)),
                ('max', models.SmallIntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'link_type_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LInstrumentWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_instrument_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LLabelWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_label_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlacePlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlaceRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlaceRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlaceReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlaceSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlaceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LPlaceWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_place_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LRecordingRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_recording_recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LRecordingRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_recording_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LRecordingReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_recording_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LRecordingSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_recording_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LRecordingUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_recording_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LRecordingWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_recording_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseGroupReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_group_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseGroupSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_group_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseGroupUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_group_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseGroupWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_group_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseReleaseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LReleaseWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_release_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LSeriesSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_series_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LSeriesUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_series_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LSeriesWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_series_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LUrlUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_url_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LUrlWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_url_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LWorkWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.IntegerField()),
                ('entity0', models.IntegerField()),
                ('entity1', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('link_order', models.IntegerField()),
                ('entity0_credit', models.TextField()),
                ('entity1_credit', models.TextField()),
            ],
            options={
                'db_table': 'l_work_work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('position', models.IntegerField()),
                ('format', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('track_count', models.IntegerField()),
            ],
            options={
                'db_table': 'medium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium', models.IntegerField()),
                ('medium_attribute_type', models.IntegerField()),
                ('medium_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('medium_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'medium_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'medium_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumAttributeTypeAllowedFormat',
            fields=[
                ('medium_format', models.IntegerField(primary_key=True, serialize=False)),
                ('medium_attribute_type', models.IntegerField()),
            ],
            options={
                'db_table': 'medium_attribute_type_allowed_format',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'medium_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumAttributeTypeAllowedValueAllowedFormat',
            fields=[
                ('medium_format', models.IntegerField(primary_key=True, serialize=False)),
                ('medium_attribute_type_allowed_value', models.IntegerField()),
            ],
            options={
                'db_table': 'medium_attribute_type_allowed_value_allowed_format',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumCdtoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium', models.IntegerField()),
                ('cdtoc', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'medium_cdtoc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('has_discids', models.BooleanField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'medium_format',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediumIndex',
            fields=[
                ('medium', models.IntegerField(primary_key=True, serialize=False)),
                ('toc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'medium_index',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OldEditorName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'old_editor_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderableLinkType',
            fields=[
                ('link_type', models.IntegerField(primary_key=True, serialize=False)),
                ('direction', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'orderable_link_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(max_length=200)),
                ('area', models.IntegerField(blank=True, null=True)),
                ('coordinates', models.TextField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'place_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'place_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceAnnotation',
            fields=[
                ('place', models.IntegerField(primary_key=True, serialize=False)),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'place_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField()),
                ('place_attribute_type', models.IntegerField()),
                ('place_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('place_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'place_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceAttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'place_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'place_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceGidRedirect',
            fields=[
                ('gid', models.UUIDField(primary_key=True, serialize=False)),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'place_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceTag',
            fields=[
                ('place', models.IntegerField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'place_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceTagRaw',
            fields=[
                ('place', models.IntegerField(primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'place_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'place_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('artist_credit', models.IntegerField()),
                ('length', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('video', models.BooleanField()),
            ],
            options={
                'db_table': 'recording',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingAlias',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('recording', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'recording_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingAliasType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'recording_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording', models.IntegerField()),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'recording_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingAttribute',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('recording', models.IntegerField()),
                ('recording_attribute_type', models.IntegerField()),
                ('recording_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('recording_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recording_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingAttributeType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'recording_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('recording_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'recording_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recording_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingMeta',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recording_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingRatingRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('rating', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'recording_rating_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recording_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordingTagRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'recording_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('artist_credit', models.IntegerField()),
                ('release_group', models.IntegerField()),
                ('status', models.IntegerField(blank=True, null=True)),
                ('packaging', models.IntegerField(blank=True, null=True)),
                ('language', models.IntegerField(blank=True, null=True)),
                ('script', models.IntegerField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('quality', models.SmallIntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAlias',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'release_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAliasType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'release_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAttribute',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release', models.IntegerField()),
                ('release_attribute_type', models.IntegerField()),
                ('release_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('release_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAttributeType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('country', models.IntegerField()),
                ('date_year', models.SmallIntegerField(blank=True, null=True)),
                ('date_month', models.SmallIntegerField(blank=True, null=True)),
                ('date_day', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseCoverart',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('cover_art_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'release_coverart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroup',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('artist_credit', models.IntegerField()),
                ('type', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupAlias',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release_group', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'release_group_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupAliasType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_group_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_group', models.IntegerField()),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'release_group_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupAttribute',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release_group', models.IntegerField()),
                ('release_group_attribute_type', models.IntegerField()),
                ('release_group_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('release_group_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_group_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupAttributeType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_group_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release_group_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_group_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_group_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupMeta',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release_count', models.IntegerField()),
                ('first_release_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('first_release_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('first_release_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_group_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupPrimaryType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_group_primary_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupRatingRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_group', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('rating', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'release_group_rating_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupSecondaryType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_group_secondary_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupSecondaryTypeJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_group', models.IntegerField()),
                ('secondary_type', models.IntegerField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'release_group_secondary_type_join',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_group', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_group_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupTagRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_group', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'release_group_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseLabel',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release', models.IntegerField()),
                ('label', models.IntegerField(blank=True, null=True)),
                ('catalog_number', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseMeta',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('info_url', models.CharField(blank=True, max_length=255, null=True)),
                ('amazon_asin', models.CharField(blank=True, max_length=10, null=True)),
                ('amazon_store', models.CharField(blank=True, max_length=20, null=True)),
                ('cover_art_presence', models.TextField()),
            ],
            options={
                'db_table': 'release_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleasePackaging',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_packaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseRaw',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('artist', models.CharField(blank=True, max_length=255, null=True)),
                ('added', models.DateTimeField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('lookup_count', models.IntegerField(blank=True, null=True)),
                ('modify_count', models.IntegerField(blank=True, null=True)),
                ('source', models.IntegerField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'release_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseStatus',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'release_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseTagRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'release_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseUnknownCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.IntegerField()),
                ('date_year', models.SmallIntegerField(blank=True, null=True)),
                ('date_month', models.SmallIntegerField(blank=True, null=True)),
                ('date_day', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'release_unknown_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplicationControl',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('current_schema_sequence', models.IntegerField()),
                ('current_replication_sequence', models.IntegerField(blank=True, null=True)),
                ('last_replication_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'replication_control',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('iso_code', models.CharField(max_length=4)),
                ('iso_number', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=100)),
                ('frequency', models.IntegerField()),
            ],
            options={
                'db_table': 'script',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('comment', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('ordering_attribute', models.IntegerField()),
                ('ordering_type', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesAlias',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('series', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'series_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesAliasType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'series_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.IntegerField()),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'series_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesAttribute',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('series', models.IntegerField()),
                ('series_attribute_type', models.IntegerField()),
                ('series_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('series_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesAttributeType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'series_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('series_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'series_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesOrderingType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'series_ordering_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesTagRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'series_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(max_length=50)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'series_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('ref_count', models.IntegerField()),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag1', models.IntegerField()),
                ('tag2', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tag_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('recording', models.IntegerField()),
                ('medium', models.IntegerField()),
                ('position', models.IntegerField()),
                ('number', models.TextField()),
                ('name', models.CharField(max_length=200)),
                ('artist_credit', models.IntegerField()),
                ('length', models.IntegerField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('is_data_track', models.BooleanField()),
            ],
            options={
                'db_table': 'track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'track_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackRaw',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('release', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('artist', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField()),
            ],
            options={
                'db_table': 'track_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('url', models.TextField()),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UrlGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'url_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('editor', models.IntegerField()),
                ('edit', models.IntegerField()),
                ('vote', models.SmallIntegerField()),
                ('vote_time', models.DateTimeField(blank=True, null=True)),
                ('superseded', models.BooleanField()),
            ],
            options={
                'db_table': 'vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('gid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkAlias',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('work', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('locale', models.TextField(blank=True, null=True)),
                ('edits_pending', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=200)),
                ('begin_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('begin_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_month', models.SmallIntegerField(blank=True, null=True)),
                ('end_date_day', models.SmallIntegerField(blank=True, null=True)),
                ('primary_for_locale', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
            options={
                'db_table': 'work_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkAliasType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'work_alias_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.IntegerField()),
                ('annotation', models.IntegerField()),
            ],
            options={
                'db_table': 'work_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkAttribute',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('work', models.IntegerField()),
                ('work_attribute_type', models.IntegerField()),
                ('work_attribute_type_allowed_value', models.IntegerField(blank=True, null=True)),
                ('work_attribute_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkAttributeType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('free_text', models.BooleanField()),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'work_attribute_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkAttributeTypeAllowedValue',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('work_attribute_type', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'work_attribute_type_allowed_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkGidRedirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gid', models.UUIDField()),
                ('new_id', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work_gid_redirect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.IntegerField()),
                ('language', models.IntegerField()),
                ('edits_pending', models.IntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work_language',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkMeta',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkRatingRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('rating', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'work_rating_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('count', models.IntegerField()),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkTagRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.IntegerField()),
                ('editor', models.IntegerField()),
                ('tag', models.IntegerField()),
                ('is_upvote', models.BooleanField()),
            ],
            options={
                'db_table': 'work_tag_raw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(db_column='BID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('child_order', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('gid', models.UUIDField()),
            ],
            options={
                'db_table': 'work_type',
                'managed': False,
            },
        ),
    ]
